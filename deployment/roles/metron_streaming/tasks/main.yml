---
- name: Create Metron streaming directories
  file: path="{{ metron_directory }}/{{ item.name }}"  state=directory mode=0755
  with_items:
      - { name: 'lib'}
      - { name: 'config'}

- name: Copy Metron streaming jars
  copy:
    src: "{{ metron_jar_path }}"
    dest: "{{ metron_directory }}/lib/"

- name: Alternatives link for "java"
  alternatives: name={{ item.name }} link={{ item.link }}  path={{ item.path }}
  with_items:
    - { name: java, link: /usr/bin/java, path: "{{ java_home }}/bin/java" }
    - { name: jar, link: /usr/bin/jar, path: "{{ java_home }}/bin/jar" }

- name: Add hbase-site.xml to topology jar
  shell: cd {{ hbase_config_path }} && jar -uf {{ metron_directory }}/lib/{{ metron_jar_name }} hbase-site.xml

- name: Add elasticsearch.ym to topology jar
  shell: cd {{ elasticsearch_config_path }} && jar -uf {{ metron_directory }}/lib/{{ metron_jar_name }} elasticsearch.yml

- name: Copy Metron topology config files
  copy:
    src: "{{ metron_src_config_path }}/{{ item }}"
    dest: "{{ metron_directory }}/config/"
  with_items:
    - "etc"
    - "topologies"

- name: Configure config.properties
  lineinfile: >
    dest={{ metron_properties_config_path }}
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: "kafka.zk=", line: "kafka.zk={{ zookeeper_url }}" }
    - { regexp: "spout.kafka.topic=", line: "spout.kafka.topic={{ pycapa_topic }}" }
    - { regexp: "es.ip=", line: "es.ip={{ groups.search[0] }}" }
    - { regexp: "es.port=", line: "es.port={{ elasticsearch_transport_port }}" }
    - { regexp: "es.clustername=", line: "es.clustername={{ elasticsearch_cluster_name }}" }
    - { regexp: "bolt.hdfs.file.system.url=", line: "bolt.hdfs.file.system.url={{ hdfs_url }}" }

- name: Submit Pcap topology
  command: storm jar {{ metron_directory }}/lib/{{ metron_jar_name }} org.apache.storm.flux.Flux --remote {{ metron_pcap_topology_config_path }} --filter {{ metron_properties_config_path }}
  ignore_errors: yes
