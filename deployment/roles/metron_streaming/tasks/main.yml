#
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: Create Metron streaming directories
  file: path="{{ metron_directory }}/{{ item.name }}"  state=directory mode=0755
  with_items:
      - { name: 'lib'}
      - { name: 'bin'}
      - { name: 'config'}

- name: Copy Metron streaming jars
  copy:
    src: "{{ metron_jar_path }}"
    dest: "{{ metron_directory }}/lib/"

- name: Copy Metron DataLoads bundle
  copy:
    src: "{{ metron_dataloads_path }}"
    dest: "{{ metron_directory }}"

- name: Unbundle Metron DataLoads bundle
  shell: cd {{ metron_directory }} && tar xzvf *.tar.gz

- name: Alternatives link for "java"
  alternatives: name={{ item.name }} link={{ item.link }}  path={{ item.path }}
  with_items:
    - { name: java, link: /usr/bin/java, path: "{{ java_home }}/bin/java" }
    - { name: jar, link: /usr/bin/jar, path: "{{ java_home }}/bin/jar" }

- name: Add hbase-site.xml to topology jar
  shell: cd {{ hbase_config_path }} && jar -uf {{ metron_directory }}/lib/{{ metron_jar_name }} hbase-site.xml

- name: Copy Metron topology config files
  copy:
    src: "{{ metron_src_config_path }}/{{ item }}"
    dest: "{{ metron_directory }}/config/"
  with_items:
    - "etc"
    - "topologies"

- name: Configure Metron topologies
  lineinfile: >
    dest={{ metron_properties_config_path }}
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
  with_items:
    - { regexp: "kafka.zk=", line: "kafka.zk={{ zookeeper_url }}" }
    - { regexp: "es.ip=", line: "es.ip={{ groups.search[0] }}" }
    - { regexp: "es.port=", line: "es.port={{ elasticsearch_transport_port }}" }
    - { regexp: "es.clustername=", line: "es.clustername={{ elasticsearch_cluster_name }}" }
    - { regexp: "bolt.hdfs.file.system.url=", line: "bolt.hdfs.file.system.url={{ hdfs_url }}" }
    - { regexp: "spout.kafka.topic.pcap=", line: "spout.kafka.topic.pcap={{ pycapa_topic }}" }
    - { regexp: "spout.kafka.topic.bro=", line: "spout.kafka.topic.bro={{ bro_topic }}" }
    - { regexp: "bolt.hbase.table.name=", line: "bolt.hbase.table.name={{ pcap_hbase_table }}" }
    - { regexp: "threat.intel.tracker.table=", line: "threat.intel.tracker.table={{ tracker_hbase_table }}" }
    - { regexp: "threat.intel.tracker.cf=", line: "threat.intel.tracker.cf=t" }
    - { regexp: "threat.intel.ip.table=", line: "threat.intel.ip.table={{ threatintel_ip_hbase_table }}" }
    - { regexp: "threat.intel.ip.cf=", line: "threat.intel.ip.cf=t" }
    - { regexp: "mysql.ip=", line: "mysql.ip={{ groups.search[0] }}" }

- name: Add Elasticsearch templates for topologies
  uri:
    url: "http://{{ groups.search[0] }}:{{ elasticsearch_web_port }}/_template/template_yaf"
    method: POST
    body: "{{ lookup('file','yaf_index.template') }}"
    status_code: 200
    body_format: json

- name: Submit Metron topologies
  command: storm jar {{ metron_directory }}/lib/{{ metron_jar_name }} org.apache.storm.flux.Flux --remote {{ item }} --filter {{ metron_properties_config_path }}
  ignore_errors: yes
  with_items:
    - "{{ metron_directory }}/config/topologies/pcap/remote.yaml"
    - "{{ metron_directory }}/config/topologies/bro/remote.yaml"
    - "{{ metron_directory }}/config/topologies/snort/remote.yaml"
    - "{{ metron_directory }}/config/topologies/yaf/remote.yaml"
